{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 87a36d72e01303c0e584","webpack:///./src/attach.js","webpack:///./src/depend.js","webpack:///./src/index.js"],"names":["attach","component","controller","refName","callback","undefined","_componentDidMount","componentDidMount","bind","$ringaControllers","push","refs","console","warn","bus","dependency","find","getAllListeningControllers","depend","walkReactParents","_currentElement","_owner","_instance","e","classOrId","propertyPath","setOnState","controllers","value","i","length","mw","modelWatcher","c","concat","watches","handler","Array","notifications","forEach","model","watch","changeHandler","change","state","prop","id","watchedPath","s","split","watchedValue","setState"],"mappings":"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","file":"react-ringa.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"React Ringa\"] = factory();\n\telse\n\t\troot[\"React Ringa\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 87a36d72e01303c0e584","/**\n * This function attaches a Ringa Controller to a specific React.Component and a selected DOM node within that component.\n *\n * Note that a Ringa controller is attached to a React Component when componentDidMount is called on the component.\n *\n * @param component The React Component to attach to.\n * @param controller The Ringa Controller to attach when a DOM node is available.\n * @param refName The React component reference name.\n * @param callback The function to call whenever the controller has been attached.\n */\nexport default function attach(component, controller, { refName = 'ringaComponent', callback = undefined } = {}) {\n\n  let _componentDidMount;\n\n  if (component.componentDidMount) {\n    _componentDidMount = component.componentDidMount.bind(component);\n  }\n\n  component.$ringaControllers = component.$ringaControllers || [];\n  component.$ringaControllers.push(controller);\n\n  component.componentDidMount = () => {\n    if (!component.refs || !component.refs[refName]) {\n      console.warn(`Error attaching Controller to React Component. Component reference ${refName} does not exist.`);\n\n      return;\n    }\n\n    controller.bus = component.refs[refName];\n\n    if (_componentDidMount) {\n      _componentDidMount();\n    }\n\n    if (callback) {\n      callback();\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/attach.js","/**\n * Walks the React Components up through the parent heirarchy.\n *\n * @param component A React Component instance.\n * @param callback A callback to call for each component in the ancestors.\n */\nexport let walkReactParents = function(component, callback) {\n  while (component) {\n    callback(component);\n\n    try {\n      component = component._currentElement._owner._instance;\n    } catch (e) {\n      component = null;\n    }\n  }\n};\n\n/**\n * Builds a dependency object for use with the depend function.\n *\n * @param classOrId A Class that extends Ringa.Model or a string id of a model you are looking for.\n * @param propertyPath A dot-delimited path into a property on the model. Or undefined if you want the model itself.\n * @param setOnState When true (default), the property will be set on the state of the component, forcing an update.\n *\n * @returns {{classOrId: *, propertyPath: *, setOnState: boolean}}\n */\nexport function dependency(classOrId, propertyPath, setOnState = true) {\n  return {\n    classOrId,\n    propertyPath,\n    setOnState\n  };\n}\n\n/**\n * Finds a Ringa.Model or a specific property, given the context of the provided React Component.\n *\n * @param component A React Component instance.\n * @param classOrId A Class that extends Ringa.Model or a string id of a model you are looking for.\n * @param propertyPath A dot-delimited path into a property on the model. Or undefined if you want the model itself.\n * @returns {*}\n */\nexport function find(component, classOrId, propertyPath = undefined) {\n  let controllers = getAllListeningControllers(component);\n  let value;\n\n  for (let i = 0; i < controllers.length; i++) {\n    let controller = controllers[i];\n    let mw = controller.modelWatcher;\n\n    if (mw) {\n      return mw.find(classOrId, propertyPath);\n    }\n  }\n\n  return null;\n}\n\n/**\n * Returns all Ringa.Controller instances that will hear when you dispatch an event from any of the provided React component's\n * DOM nodes or its descendants.\n *\n * @param component A React Component instance.\n * @returns {Array}\n */\nexport function getAllListeningControllers(component) {\n  let controllers = [];\n\n  walkReactParents(component, c => {\n    if (c.$ringaControllers && c.$ringaControllers.length) {\n      controllers = controllers.concat(c.$ringaControllers);\n    }\n  });\n\n  return controllers;\n}\n\n/**\n * Listens for changes on the provided React Component anywhere in its ancestor tree of Controllers for the requested Ringa.Model and,\n * if desired specific property path, changes. See getAllListeningControllers for information on the controllers and their models\n * that this will depend upon.\n *\n * Example:\n *\n * import {depend, dependency} from 'react-ringa';\n *\n * class MyComponent extends React.Component {\n *   constructor() {\n *     super();\n *\n *     depend(this, dependency('myModelId', 'some.property'));\n *   }\n * }\n *\n * @param component A React Component instance.\n * @param watches An individual or Array of dependency objects. See\n * @param handler A function to callback immediately with all the dependencies that are found right now.\n *\n * @returns {Array}\n */\nexport function depend(component, watches, handler = undefined) {\n  let controllers = getAllListeningControllers(component);\n\n  watches = watches instanceof Array ? watches : [watches];\n\n  let notifications = [];\n\n  watches.forEach(watch => {\n    controllers.forEach(controller => {\n      let mw = controller.modelWatcher;\n      if (mw) {\n        let model = mw.find(watch.classOrId);\n        let value = mw.find(watch.classOrId, watch.propertyPath);\n\n        if (model && value) {\n          notifications.push({\n            model,\n            value\n          });\n        }\n\n        let changeHandler = function(watch, change) {\n          change = change[0];\n\n          if (watch.setOnState) {\n            let state = {};\n            let prop = change.model.id;\n            if (change.watchedPath) {\n              let s = change.watchedPath.split('.');\n              prop = s[s.length-1];\n            }\n            state[prop] = change.watchedValue;\n            component.setState(state);\n          }\n        }.bind(undefined, watch);\n\n        mw.watch(watch.classOrId, watch.propertyPath, changeHandler);\n      }\n    });\n  });\n\n  if (notifications && notifications.length && handler) {\n    handler(notifications);\n  }\n\n  return notifications;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/depend.js","import attach from './attach';\nimport {depend, dependency, walkReactParents, find, getAllListeningControllers} from './depend';\n\nexport default {\n  attach,\n  depend,\n  dependency,\n  walkReactParents,\n  find,\n  getAllListeningControllers\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}