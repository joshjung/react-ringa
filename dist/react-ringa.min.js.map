{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-ringa.min.js","webpack:///webpack/bootstrap 1f48619ef46b1ddd342e","webpack:///./src/attach.js","webpack:///./src/depend.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","attach","component","controller","_ref","arguments","length","undefined","_ref$refName","refName","_ref$callback","callback","_componentDidMount","componentDidMount","bind","$ringaControllers","push","refs","bus","console","warn","default","walkReactParents","ancestors","_reactInternalInstance","_currentElement","_owner","_instance","e","forEach","dependency","classOrId","propertyPath","setOnState","find","controllers","getAllListeningControllers","mw","modelWatcher","concat","depend","watches","handler","_componentWillMount","componentWillMount","error","constructor","Array","notifications","watch","model","changeHandler","changes","newState","skipUpdate","dependencyDidChange","change","state","prop","setProp","watchedPath","split","watchedValue","assign","setState","_interopRequireDefault","obj","_attach","_attach2","_depend"],"mappings":"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","file":"react-ringa.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"React Ringa\"] = factory();\n\telse\n\t\troot[\"React Ringa\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"React Ringa\"] = factory();\n\telse\n\t\troot[\"React Ringa\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = attach;\n/**\n * This function attaches a Ringa Controller to a specific React.Component and a selected DOM node within that component.\n *\n * Note that a Ringa controller is attached to a React Component when componentDidMount is called on the component.\n *\n * @param component The React Component to attach to.\n * @param controller The Ringa Controller to attach when a DOM node is available.\n * @param refName The React component reference name.\n * @param callback The function to call whenever the controller has been attached.\n */\nfunction attach(component, controller) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$refName = _ref.refName,\n      refName = _ref$refName === undefined ? 'ringaComponent' : _ref$refName,\n      _ref$callback = _ref.callback,\n      callback = _ref$callback === undefined ? undefined : _ref$callback;\n\n  var _componentDidMount = void 0;\n\n  if (component.componentDidMount) {\n    _componentDidMount = component.componentDidMount.bind(component);\n  }\n\n  component.$ringaControllers = component.$ringaControllers || [];\n  component.$ringaControllers.push(controller);\n\n  component.componentDidMount = function () {\n    if (!component.refs || !component.refs[refName]) {\n      console.warn('Error attaching Controller to React Component. Component reference ' + refName + ' does not exist.');\n\n      return;\n    }\n\n    controller.bus = component.refs[refName];\n\n    if (_componentDidMount) {\n      _componentDidMount();\n    }\n\n    if (callback) {\n      callback();\n    }\n  };\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.walkReactParents = walkReactParents;\nexports.dependency = dependency;\nexports.find = find;\nexports.getAllListeningControllers = getAllListeningControllers;\nexports.depend = depend;\n/**\n * Walks the React Components up through the parent heirarchy.\n *\n * @param component A React Component instance.\n * @param callback A callback to call for each component in the ancestors.\n */\nfunction walkReactParents(component, callback) {\n  var ancestors = [];\n\n  if (component._reactInternalInstance) {\n    ancestors.push(component);\n\n    component = component._reactInternalInstance;\n  }\n\n  while (component) {\n    ancestors.push(component);\n\n    try {\n      component = component._currentElement._owner._instance;\n    } catch (e) {\n      component = null;\n    }\n  }\n\n  ancestors.forEach(callback);\n\n  return ancestors;\n};\n\n/**\n * Builds a dependency object for use with the depend function.\n *\n * @param classOrId A Class that extends Ringa.Model or a string id of a model you are looking for.\n * @param propertyPath A dot-delimited path into a property on the model. Or undefined if you want the model itself.\n * @param setOnState When true (default), the property will be set on the state of the component, forcing an update.\n *\n * @returns {{classOrId: *, propertyPath: *, setOnState: boolean}}\n */\nfunction dependency(classOrId, propertyPath) {\n  var setOnState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  return {\n    classOrId: classOrId,\n    propertyPath: propertyPath,\n    setOnState: setOnState\n  };\n}\n\n/**\n * Finds a Ringa.Model or a specific property, given the context of the provided React Component.\n *\n * @param component A React Component instance.\n * @param classOrId A Class that extends Ringa.Model or a string id of a model you are looking for.\n * @param propertyPath A dot-delimited path into a property on the model. Or undefined if you want the model itself.\n * @returns {*}\n */\nfunction find(component, classOrId) {\n  var propertyPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n\n  var controllers = getAllListeningControllers(component);\n  var value = void 0;\n\n  for (var i = 0; i < controllers.length; i++) {\n    var controller = controllers[i];\n    var mw = controller.modelWatcher;\n\n    if (mw) {\n      return mw.find(classOrId, propertyPath);\n    }\n  }\n\n  return null;\n}\n\n/**\n * Returns all Ringa.Controller instances that will hear when you dispatch an event from any of the provided React component's\n * DOM nodes or its descendants.\n *\n * @param component A React Component instance.\n * @returns {Array}\n */\nfunction getAllListeningControllers(component) {\n  var controllers = [];\n\n  walkReactParents(component, function (c) {\n    if (c.$ringaControllers && c.$ringaControllers.length) {\n      controllers = controllers.concat(c.$ringaControllers);\n    }\n  });\n\n  return controllers;\n}\n\n/**\n * Listens for changes on the provided React Component anywhere in its ancestor tree of Controllers for the requested Ringa.Model and,\n * if desired specific property path, changes. See getAllListeningControllers for information on the controllers and their models\n * that this will depend upon.\n *\n * Example:\n *\n * import {depend, dependency} from 'react-ringa';\n *\n * class MyComponent extends React.Component {\n *   constructor() {\n *     super();\n *\n *     depend(this, dependency('myModelId', 'some.property'));\n *   }\n * }\n *\n * @param component A React Component instance.\n * @param watches An individual or Array of dependency objects. See\n * @param handler A function to callback immediately with all the dependencies that are found right now.\n *\n * @returns {Array}\n */\nfunction depend(component, watches) {\n  var handler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n\n  var _componentWillMount = void 0;\n\n  if (component.componentWillMount) {\n    _componentWillMount = component.componentWillMount.bind(component);\n  }\n\n  component.componentWillMount = function () {\n    var controllers = getAllListeningControllers(component);\n\n    if (!controllers.length) {\n      console.error('react-ringa depend(): could not find any Ringa Controllers in the ancestors of ' + component.constructor.name + ', the following dependencies will NOT work: ', watches, component);\n\n      return;\n    }\n\n    watches = watches instanceof Array ? watches : [watches];\n\n    var notifications = [];\n\n    watches.forEach(function (watch) {\n      controllers.forEach(function (controller) {\n        var mw = controller.modelWatcher;\n        if (mw) {\n          // TODO aggregate so that we don't call watch twice.\n          var model = mw.find(watch.classOrId);\n          var value = mw.find(watch.classOrId, watch.propertyPath);\n\n          // Create Change Handler\n          var changeHandler = function (watch, changes) {\n            var newState = {};\n\n            var skipUpdate = component.dependencyDidChange ? component.dependencyDidChange(change, watch) : undefined;\n\n            if (skipUpdate === undefined && watch.setOnState) {\n              changes.forEach(function (change) {\n\n                var state = {};\n                var prop = change.model.name;\n                if (change.setProp) {\n                  prop = change.setProp;\n                } else if (change.watchedPath) {\n                  var s = change.watchedPath.split('.');\n                  prop = s[s.length - 1];\n                }\n\n                state[prop] = change.watchedValue;\n\n                newState = Object.assign(newState, state);\n              });\n\n              component.setState(newState);\n            }\n          }.bind(undefined, watch);\n\n          // Handle initial property value\n          if (model !== undefined && value !== null) {\n            notifications.push({\n              model: model,\n              value: value\n            });\n\n            changeHandler([{\n              model: model,\n              value: value,\n              watchedPath: watch.propertyPath,\n              watchedValue: value\n            }]);\n          }\n\n          mw.watch(watch.classOrId, watch.propertyPath, changeHandler);\n        }\n      });\n    });\n\n    if (notifications && notifications.length && handler) {\n      handler(notifications);\n    }\n\n    if (_componentWillMount) {\n      _componentWillMount();\n    }\n  };\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAllListeningControllers = exports.find = exports.walkReactParents = exports.dependency = exports.depend = exports.attach = undefined;\n\nvar _attach = __webpack_require__(0);\n\nvar _attach2 = _interopRequireDefault(_attach);\n\nvar _depend = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.attach = _attach2.default;\nexports.depend = _depend.depend;\nexports.dependency = _depend.dependency;\nexports.walkReactParents = _depend.walkReactParents;\nexports.find = _depend.find;\nexports.getAllListeningControllers = _depend.getAllListeningControllers;\nexports.default = {\n  attach: _attach2.default,\n  depend: _depend.depend,\n  dependency: _depend.dependency,\n  walkReactParents: _depend.walkReactParents,\n  find: _depend.find,\n  getAllListeningControllers: _depend.getAllListeningControllers\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// react-ringa.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1f48619ef46b1ddd342e","/**\n * This function attaches a Ringa Controller to a specific React.Component and a selected DOM node within that component.\n *\n * Note that a Ringa controller is attached to a React Component when componentDidMount is called on the component.\n *\n * @param component The React Component to attach to.\n * @param controller The Ringa Controller to attach when a DOM node is available.\n * @param refName The React component reference name.\n * @param callback The function to call whenever the controller has been attached.\n */\nexport default function attach(component, controller, { refName = 'ringaComponent', callback = undefined } = {}) {\n\n  let _componentDidMount;\n\n  if (component.componentDidMount) {\n    _componentDidMount = component.componentDidMount.bind(component);\n  }\n\n  component.$ringaControllers = component.$ringaControllers || [];\n  component.$ringaControllers.push(controller);\n\n  component.componentDidMount = () => {\n    if (!component.refs || !component.refs[refName]) {\n      console.warn(`Error attaching Controller to React Component. Component reference ${refName} does not exist.`);\n\n      return;\n    }\n\n    controller.bus = component.refs[refName];\n\n    if (_componentDidMount) {\n      _componentDidMount();\n    }\n\n    if (callback) {\n      callback();\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/attach.js","/**\n * Walks the React Components up through the parent heirarchy.\n *\n * @param component A React Component instance.\n * @param callback A callback to call for each component in the ancestors.\n */\nexport function walkReactParents(component, callback) {\n  let ancestors = [];\n\n  if (component._reactInternalInstance) {\n    ancestors.push(component);\n\n    component = component._reactInternalInstance;\n  }\n\n  while (component) {\n    ancestors.push(component);\n\n    try {\n      component = component._currentElement._owner._instance;\n    } catch (e) {\n      component = null;\n    }\n  }\n\n  ancestors.forEach(callback)\n\n  return ancestors;\n};\n\n/**\n * Builds a dependency object for use with the depend function.\n *\n * @param classOrId A Class that extends Ringa.Model or a string id of a model you are looking for.\n * @param propertyPath A dot-delimited path into a property on the model. Or undefined if you want the model itself.\n * @param setOnState When true (default), the property will be set on the state of the component, forcing an update.\n *\n * @returns {{classOrId: *, propertyPath: *, setOnState: boolean}}\n */\nexport function dependency(classOrId, propertyPath, setOnState = true) {\n  return {\n    classOrId,\n    propertyPath,\n    setOnState\n  };\n}\n\n/**\n * Finds a Ringa.Model or a specific property, given the context of the provided React Component.\n *\n * @param component A React Component instance.\n * @param classOrId A Class that extends Ringa.Model or a string id of a model you are looking for.\n * @param propertyPath A dot-delimited path into a property on the model. Or undefined if you want the model itself.\n * @returns {*}\n */\nexport function find(component, classOrId, propertyPath = undefined) {\n  let controllers = getAllListeningControllers(component);\n  let value;\n\n  for (let i = 0; i < controllers.length; i++) {\n    let controller = controllers[i];\n    let mw = controller.modelWatcher;\n\n    if (mw) {\n      return mw.find(classOrId, propertyPath);\n    }\n  }\n\n  return null;\n}\n\n/**\n * Returns all Ringa.Controller instances that will hear when you dispatch an event from any of the provided React component's\n * DOM nodes or its descendants.\n *\n * @param component A React Component instance.\n * @returns {Array}\n */\nexport function getAllListeningControllers(component) {\n  let controllers = [];\n\n  walkReactParents(component, c => {\n    if (c.$ringaControllers && c.$ringaControllers.length) {\n      controllers = controllers.concat(c.$ringaControllers);\n    }\n  });\n\n  return controllers;\n}\n\n/**\n * Listens for changes on the provided React Component anywhere in its ancestor tree of Controllers for the requested Ringa.Model and,\n * if desired specific property path, changes. See getAllListeningControllers for information on the controllers and their models\n * that this will depend upon.\n *\n * Example:\n *\n * import {depend, dependency} from 'react-ringa';\n *\n * class MyComponent extends React.Component {\n *   constructor() {\n *     super();\n *\n *     depend(this, dependency('myModelId', 'some.property'));\n *   }\n * }\n *\n * @param component A React Component instance.\n * @param watches An individual or Array of dependency objects. See\n * @param handler A function to callback immediately with all the dependencies that are found right now.\n *\n * @returns {Array}\n */\nexport function depend(component, watches, handler = undefined) {\n  let _componentWillMount;\n\n  if (component.componentWillMount) {\n    _componentWillMount = component.componentWillMount.bind(component);\n  }\n\n  component.componentWillMount = () => {\n    let controllers = getAllListeningControllers(component);\n\n    if (!controllers.length) {\n      console.error(`react-ringa depend(): could not find any Ringa Controllers in the ancestors of ${component.constructor.name}, the following dependencies will NOT work: `, watches, component);\n\n      return;\n    }\n\n    watches = watches instanceof Array ? watches : [watches];\n\n    let notifications = [];\n\n    watches.forEach(watch => {\n      controllers.forEach(controller => {\n        let mw = controller.modelWatcher;\n        if (mw) {\n          // TODO aggregate so that we don't call watch twice.\n          let model = mw.find(watch.classOrId);\n          let value = mw.find(watch.classOrId, watch.propertyPath);\n\n          // Create Change Handler\n          let changeHandler = function(watch, changes) {\n            let newState = {};\n\n            let skipUpdate = component.dependencyDidChange ? component.dependencyDidChange(change, watch) : undefined;\n\n            if (skipUpdate === undefined && watch.setOnState) {\n              changes.forEach(change => {\n\n                let state = {};\n                let prop = change.model.name;\n                if (change.setProp) {\n                  prop = change.setProp;\n                } else if (change.watchedPath) {\n                  let s = change.watchedPath.split('.');\n                  prop = s[s.length - 1];\n                }\n\n                state[prop] = change.watchedValue;\n\n                newState = Object.assign(newState, state);\n              });\n\n              component.setState(newState);\n            }\n          }.bind(undefined, watch);\n\n          // Handle initial property value\n          if (model !== undefined && value !== null) {\n            notifications.push({\n              model,\n              value\n            });\n\n            changeHandler([{\n              model,\n              value,\n              watchedPath: watch.propertyPath,\n              watchedValue: value\n            }]);\n          }\n\n          mw.watch(watch.classOrId, watch.propertyPath, changeHandler);\n        }\n      });\n    });\n\n    if (notifications && notifications.length && handler) {\n      handler(notifications);\n    }\n\n    if (_componentWillMount) {\n      _componentWillMount();\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/depend.js","import attach from './attach';\nimport {depend, dependency, walkReactParents, find, getAllListeningControllers} from './depend';\n\nexport {attach, depend, dependency, walkReactParents, find, getAllListeningControllers};\n\nexport default {\n  attach,\n  depend,\n  dependency,\n  walkReactParents,\n  find,\n  getAllListeningControllers\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}